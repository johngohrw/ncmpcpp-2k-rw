fb.AcquireUiSelectionHolder()
fb.AddDirectory()
fb.AddFiles()
fb.ClearPlaylist()
fb.ComponentPath
fb.CreateAutoPlaylist(idx, name, query[, sort, flags])
fb.CreateContextMenuManager()
fb.CreateMainMenuManager()
fb.CreateProfiler([name])
fb.CursorFollowPlayback
fb.Exit()
fb.FoobarPath
fb.GetFocusItem([force])
fb.GetLibraryItems();
fb.GetLibraryRelativePath(handle);
fb.GetNowPlaying()
fb.GetSelection()
fb.GetSelectionType()
fb.GetSelections([flags])
fb.IsAutoPlaylist(idx)
fb.IsLibraryEnabled();
fb.IsMetadbInMediaLibrary(handle)
fb.IsPaused
fb.IsPlaying
fb.LoadPlaylist()
fb.Next()
fb.Pause()
fb.Play()
fb.PlayOrPause()
fb.PlaybackFollowCursor
fb.PlaybackLength
fb.PlaybackOrder
fb.PlaybackTime
fb.Prev()
fb.ProfilePath
fb.Random()
fb.RunContextCommand(command[, flags])
fb.RunContextCommandWithMetadb(command, handle_or_handles[, flags])
fb.RunMainMenuCommand(command)
fb.SavePlaylist()
fb.ShowAutoPlaylistUI(idx)
fb.ShowConsole()
fb.ShowLibrarySearchUI(query);
fb.ShowPopupMessage(msg[, title, iconid])
fb.ShowPreferences()
fb.Stop()
fb.StopAfterCurrent
fb.TitleFormat(expression)
fb.Volume
fb.VolumeDown()
fb.VolumeMute()
fb.VolumeUp()
fb.trace(...)

gdi.CreateImage(w, h)
gdi.CreateStyleTextRender([pngmode])
gdi.Font(name, size_px[, style])
gdi.Image(path)
gdi.LoadImageAsync(window_id, path)

plman.ActivePlaylist
plman.AddLocations(playlistIndex, paths[, select])
plman.AddItemToPlaybackQueue(handle)
plman.AddPlaylistItemToPlaybackQueue(playlistIndex, playlistItemIndex)
plman.ClearPlaylist(playlistIndex)
plman.ClearPlaylistSelection(playlistIndex)
plman.CreateAutoPlaylist(idx, name, query[, sort, flags])
plman.CreatePlaybackQueueItem()
plman.CreatePlaylist(playlistIndex, name)
plman.DuplicatePlaylist(from, name)
plman.EnsurePlaylistItemVisible(playlistIndex, itemIndex)
plman.ExecutePlaylistDefaultAction(playlistIndex, playlistItemIndex)
plman.FindPlaybackQueueItemIndex(handle, playlistIndex, playlistItemIndex)
plman.FlushPlaybackQueue()
plman.GetPlaybackQueueContents()
plman.GetPlaybackQueueCount()
plman.GetPlayingItemLocation()
plman.GetPlaylistFocusItemIndex(playlistIndex)
plman.GetPlaylistItems(playlistIndex)
plman.GetPlaylistName(playlistIndex)
plman.GetPlaylistSelectedItems(playlistIndex)
plman.GetQueryItems(handles, query)
plman.InsertPlaylistItems(playlistIndex, base, handles[, select])
plman.InsertPlaylistItemsFilter(playlistIndex, base, handles[, select])
plman.IsAutoPlaylist(playlistIndex)
plman.IsPlaybackQueueActive()
plman.IsPlaylistItemSelected(playlistIndex, itemIndex)
plman.MovePlaylist(from, to)
plman.MovePlaylistSelection(playlistIndex, delta)
plman.PlaybackOrder
plman.PlayingPlaylist
plman.PlaylistCount
plman.PlaylistItemCount(playlistIndex)
plman.PlaylistRecyclerManager
plman.RemoveItemFromPlaybackQueue(index)
plman.RemoveItemsFromPlaybackQueue(affectedItems)
plman.RemovePlaylist(playlistIndex)
plman.RemovePlaylistSelection(playlistIndex[, crop])
plman.RenamePlaylist(playlistIndex, name)
plman.SetActivePlaylistContext()
plman.SetPlaylistFocusItem(playlistIndex, itemIndex)
plman.SetPlaylistFocusItemByHandle(playlistIndex, itemHandle)
plman.SetPlaylistSelection(playlistIndex, affectedItems, state)
plman.SetPlaylistSelectionSingle(playlistIndex, itemIndex, state)
plman.SortByFormat(playlistIndex, pattern[, selOnly])
plman.SortByFormatV2(playlistIndex, pattern[, direction])
plman.UndoBackup(playlistIndex);

utils.CheckComponent(name[, is_dll])
utils.CheckFont(name)
utils.FileTest(path, mode)
utils.FormatDuration(seconds)
utils.FormatFileSize(bytes)
utils.GetAlbumArtAsync(window_id, handle[, art_id, need_stub, only_embed, no_load])
utils.GetAlbumArtEmbedded(rawpath[, art_id])
utils.GetAlbumArtV2(handle[, art_id, need_stub])
utils.GetSysColor(index)
utils.GetSystemMetrics(index)
utils.Glob(pattern[, exc_mask, inc_mask])
utils.IsKeyPressed(vkey)
utils.MapString(text, lcid, flags)
utils.PathWildcardMatch(pattern, str)
utils.ReadINI(filename, section, key[, defaultval])
utils.ReadTextFile(filename[, codepage])
utils.WriteINI(filename, section, key, val)

window.ClearInterval(timerID)
window.ClearTimeout(timerID)
window.CreatePopupMenu()
window.CreateThemeManager(classlist)
window.CreateTooltip(name, size_px, style)
window.DlgCode
window.GetBackgroundImage()
window.GetColorCUI(type[, client_guid])
window.GetColorDUI(type)
window.GetFontCUI(type[, client_guid])
window.GetFontDUI(type)
window.GetProperty(name[, defaultval])
window.Height
window.ID
window.InstanceType
window.IsTransparent
window.IsVisible
window.MaxHeight
window.MaxWidth
window.MinHeight
window.MinWidth
window.NotifyOthers(name, info)
window.Reload()
window.Repaint([force])
window.RepaintRect(x, y, w, h[, force])
window.SetCursor(id)
window.SetInterval(func, delay)
window.SetProperty(name, val)
window.SetTimeout(func, delay)
window.ShowConfigure()
window.ShowProperties()
window.Width

#Use in on_paint
gr.CalcTextHeight(str, IGdiFont)
gr.CalcTextWidth(str, IGdiFont)
gr.DrawEllipse(x, y, w, h, line_width, color)
gr.DrawImage(IGdiBitmap, dstX, dstY, dstW, dstH, srcX, srcY, srcW, srcH, angle = 0, alpha = 255)
gr.DrawLine(x1, y1, x2, y2, line_width, color)
gr.DrawPolygon(color, line_width, points)
gr.DrawRect(x, y, w, h, line_width, color)
gr.DrawRoundRect(x, y, w, h, arc_width, arc_height, line_width, color)
gr.DrawString(str, IGdiFont, color, x, y, w, h, flags = 0)
gr.EstimateLineWrap(str, IGdiFont, max_width)
gr.FillEllipse(x, y, w, h, color)
gr.FillGradRect(x, y, w, h, angle, color1, color2, focus = 1.0)
gr.FillPolygon(color, fillmode, points)
gr.FillRoundRect(x, y, w, h, arc_width, arc_height, color)
gr.FillSolidRect(x, y, w, h, color)
gr.GdiAlphaBlend(IGdiRawBitmap, dstX, dstY, dstW, dstH, srcX, srcY, srcW, srcH, alpha = 255)
gr.GdiDrawBitmap(IGdiRawBitmap, dstX, dstY, dstW, dstH, srcX, srcY, srcW, srcH)
gr.GdiDrawText(str, IGdiFont, color, x, y, w, h, format = 0) 
gr.MeasureString(str, IGdiFont, x, y, w, h, flags = 0)
gr.SetInterpolationMode(mode)
gr.SetSmoothingMode(mode)
gr.SetTextRenderingHint(mode)

# Callbacks
on_char(code)
on_colors_changed()
on_cursor_follow_playback_changed(state)
on_drag_drop(action, x, y, mask)
on_drag_enter(action, x, y, mask)
on_drag_leave()
on_drag_over(action, x, y, mask)
on_focus(is_focused)
on_font_changed()
on_get_album_art_done(handle, art_id, image, image_path)
on_item_focus_change(playlist, from, to)
on_item_played(handle)
on_key_down(vkey)
on_key_up(vkey)
on_library_items_added()
on_library_items_changed()
on_library_items_removed()
on_load_image_done(tid, image)
on_metadb_changed(handle, fromhook)
on_mouse_lbtn_dblclk(x, y, mask)
on_mouse_lbtn_down(x, y, mask)
on_mouse_lbtn_up(x, y, mask)
on_mouse_leave()
on_mouse_mbtn_dblclk(x, y, mask)
on_mouse_mbtn_down(x, y, mask)
on_mouse_mbtn_up(x, y, mask)
on_mouse_move(x, y)
on_mouse_rbtn_dblclk(x, y, mask)
on_mouse_rbtn_down(x, y, mask)
on_mouse_rbtn_up(x, y, mask)
on_mouse_wheel(step)
on_notify_data(name, info)
on_paint(gr)
on_playback_dynamic_info()
on_playback_dynamic_info_track()
on_playback_edited()
on_playback_follow_cursor_changed(state)
on_playback_new_track(handle)
on_playback_order_changed(new_order_index)
on_playback_pause(state)
on_playback_queue_changed(origin)
on_playback_seek(time)
on_playback_starting(cmd, is_paused)
on_playback_stop(reason)
on_playback_time(time)
on_playlist_item_ensure_visible(playlist, item)
on_playlist_items_added(playlist)
on_playlist_items_removed(playlist, new_count)
on_playlist_items_reordered(playlist)
on_playlist_items_selection_change()
on_playlist_stop_after_current_changed(state)
on_playlist_switch()
on_playlists_changed()
on_refresh_background_done()
on_script_unload()
on_selection_changed(handle)
on_size()
on_tooltip_custom_paint(gr)
on_volume_change(val)
